spring:
  application:
    name: api-gateway
  profiles:
   active: dev
server:
   port: 46959         # 指定该实例的端口
#日志配置
logging:
  config: classpath:logback-spring.xml

#配置Hystrix的超时时间为5秒，解决Feign/Ribbon第一次请求失败的问题
hystrix:
  command:
      default:
        execution:
          isolation:
            thread:
              timeoutInMilliseconds: 5000

--- # 开发环境 **********************************************************************************************************
spring:
  profiles: dev
eureka:
  client:
    serviceUrl:
      defaultZone: http://${spring.cloud.client.ipAddress}:46960/eureka/
    healthcheck:
      enabled: true
  instance:
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
    prefer-ip-address: true        # 设置微服务调用地址为IP优先（缺省为false）
    lease-renewal-interval-in-seconds: 20 # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-expiration-duration-in-seconds: 60 # 发呆时间，即服务续约到期时间（缺省为90s）
# zuul 网关配置
zuul:
  prefix:
  ignore-url: /content
  routes:
    trvok-route:                    # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
      path: /trvok/**               # 想要映射到的路径
      service-id: trvok-service     # Eureka中的serviceId
    voucher-route:
      path: /voucher/**             # SIP获取本地券码请求的路径
      service-id: voucher-service
    recharge-route:                 # 充值请求的路径
      path: /recharge/**
      service-id: recharge-service
    ihuyi-route:                    # 互亿请求的路径
      path: /ihuyi/**
      service-id: ihuyi-service
    content-route:
      path: /content/**
      service-id: content-service

--- # 测试环境 **********************************************************************************************************
spring:
  profiles: test
eureka:
  client:
    serviceUrl:
      defaultZone: http://10.193.17.84:46960/eureka/,http://10.193.17.86:46960/eureka/
    healthcheck:
      enabled: true
  instance:
      instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
      prefer-ip-address: true        # 设置微服务调用地址为IP优先（缺省为false）
      lease-renewal-interval-in-seconds: 20 # 心跳时间，即服务续约间隔时间（缺省为30s）
      lease-expiration-duration-in-seconds: 60 # 发呆时间，即服务续约到期时间（缺省为90s）

# zuul 网关配置
zuul:
  prefix:
  ignore-url: /content
  routes:
    trvok-route:                    # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
      path: /trvok/**               # 想要映射到的路径
      service-id: trvok-service     # Eureka中的serviceId
    voucher-route:
      path: /voucher/**             # SIP获取本地券码请求的路径
      service-id: voucher-service
    recharge-route:                 # 充值请求的路径
      path: /recharge/**
      service-id: recharge-service
    ihuyi-route:                    # 互亿请求的路径
      path: /ihuyi/**
      service-id: ihuyi-service
    content-route:
      path: /content/**
      service-id: content-service


--- # 生产环境***********************************************************************************************************
spring:
  profiles: prd

eureka:
  client:
    serviceUrl:
      defaultZone: http://10.150.9.20:46960/eureka/,http://10.150.9.21:46960/eureka/
    healthcheck:
      enabled: true
  instance:
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
    prefer-ip-address: true        # 设置微服务调用地址为IP优先（缺省为false）
    lease-renewal-interval-in-seconds: 20 # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-expiration-duration-in-seconds: 60 # 发呆时间，即服务续约到期时间（缺省为90s）

# zuul 网关配置
zuul:
  #prefix: /api
  ignore-url: /content
  routes:
    trvok-route:                    # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
      path: /trvok/**               # 想要映射到的路径
      service-id: trvok-service     # Eureka中的serviceId
    voucher-route:
      path: /voucher/**             # SIP获取本地券码请求的路径
      service-id: voucher-service
    recharge-route:                 # 充值请求的路径
      path: /recharge/**
      service-id: recharge-service
    ihuyi-route:                    # 互亿请求的路径
      path: /ihuyi/**
      service-id: ihuyi-service
    content-route:
      path: /content/**
      service-id: content-service


