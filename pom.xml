<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cupdata.sip</groupId>
	<artifactId>service-integration-platform</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<name>service-integration-platform</name>
	<description>Service Integration Platform</description>

	<!-- 引入spring boot的依赖 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<modules>
		<module>eureka-service</module>
		<module>api-gateway</module>
		<!--<module>commons</module>-->
		<module>order-service</module>
		<module>product-service</module>
		<module>trvok-service</module>
        <module>orgsupplier-service</module>
        <module>voucher-service</module>
        <module>recharge-service</module>
        <module>config-service</module>
		<module>lakala-service</module>
		<module>notify-service</module>
		<module>cdd-service</module>
        <module>iqiyi-service</module>
		<module>tencent-service</module>
		<module>content-service</module>
		<module>ihuyi-service</module>
		<module>common-parent</module>
		<module>bestdo-service</module>
		<module>shengda-service</module>
		<module>ikang-service</module>
	</modules>

	<!-- 配置各个依赖库的版本，对所有依赖进行全局版本管理-->
	<properties>
		<revision>1.0.1-SNAPSHOT</revision>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.RELEASE</spring-cloud.version>
		<commons-lang3.version>3.6</commons-lang3.version>
		<mybatis.version>1.3.0</mybatis.version>
		<druid.version>1.1.7</druid.version>
		<joda.version>2.9.9</joda.version>
		<guava.version>18.0</guava.version>
		<fastjson.version>1.2.45</fastjson.version>
		<jasypt.version>1.16</jasypt.version>
		<httpclient.version>4.5.3</httpclient.version>
		<mybatis-tool.version>1.2.3</mybatis-tool.version>
		<swagger.version>2.7.0</swagger.version>
		<target.dir>D:\${revision}</target.dir>
	</properties>

	<!-- 必须的依赖-->
	<dependencies>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- 支持 @ConfigurationProperties 注解 -->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>-->

		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<!-- 项目可选依赖管理-->
	<dependencyManagement>
		<dependencies>
			<!-- 引入spring cloud的依赖-->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!--<dependency>-->
				<!--<groupId>com.cupdata.sip</groupId>-->
				<!--<artifactId>commons</artifactId>-->
				<!--<version>${revision}</version>-->
			<!--</dependency>-->
			<dependency>
				<groupId>com.cupdata.sip</groupId>
				<artifactId>common-cache</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.cupdata.sip</groupId>
				<artifactId>common-lang</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.cupdata.sip</groupId>
				<artifactId>common-api</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.cupdata.sip</groupId>
				<artifactId>common-dao</artifactId>
                <version>${revision}</version>
            </dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 配置全局maven私服-->
	<repositories>
		<repository>
			<id>cupdmaven</id>
			<name>maven-public</name>
			<url>http://10.193.17.10:8081/repository/maven-public/</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- 不用在mirror里面配置-->

	<!-- maven插件 -->
	<build>
		<finalName>${artifactId}</finalName>

		<plugins>
			<!-- maven 打包指定编译 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>

			</plugin>
			<!-- maven 打包时跳过测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- 对发布的POM进行精简  -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<updatePomFile>true</updatePomFile>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
	</build>
</project>
